// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsStore.DataAccess.Data;

#nullable disable

namespace SportsStore.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SportsStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            ImageURL = "",
                            Name = "Одежда"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            ImageURL = "",
                            Name = "Обувь"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            ImageURL = "",
                            Name = "Тренажёры"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            ImageURL = "",
                            Name = "Аксессуары"
                        });
                });

            modelBuilder.Entity("SportsStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2026,
                            Description = "Ткань: хлопок, размер: XL, цвет: синий",
                            Name = "Футболка мужская",
                            Price = 800m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2028,
                            Description = "геометрия: 120/73/103 мм, ростовка: 165см, радиус выреза: R12",
                            Name = "Лыжи",
                            Price = 15000m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2025,
                            Description = "Материал: резина",
                            Name = "Шапка для плавания",
                            Price = 500m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Вес: 5 кг, материал: сталь",
                            Name = "Гантели",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Вес: 53 кг, габариты: 155x73x31 см, Ширина полотна: 45 см",
                            Name = "Беговая дорожка",
                            Price = 50000m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1022,
                            Description = "Материал: резина, цвет: оранжевый",
                            Name = "Мяч баскетбольный",
                            Price = 750m
                        });
                });

            modelBuilder.Entity("SportsStore.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("SportsStore.Models.Product", b =>
                {
                    b.HasOne("SportsStore.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SportsStore.Models.ProductImage", b =>
                {
                    b.HasOne("SportsStore.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SportsStore.Models.Product", b =>
                {
                    b.Navigation("ProductImages");
                });
#pragma warning restore 612, 618
        }
    }
}
